apiVersion: v1
kind: Service
metadata:
  name: orderer0
spec:
  type: NodePort
  selector:
    app: orderer0
  ports:
  - name: app
    protocol: TCP
    port: 7050
    targetPort: 7050
    nodePort: 30100
  - name: operations
    protocol: TCP
    port: 8443
    targetPort: 8443
    nodePort: 30101

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: orderer0
  labels:
    app: orderer0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orderer0
  template:
    metadata:
      labels:
        app: orderer0
    spec:

      volumes:
      - name: hlf-artifacts
        persistentVolumeClaim:
          claimName: hlf-artifacts-pvc
      - name: orderer-yaml
        configMap:
          name: orderer-yaml
          items:
          - key: "orderer.yaml"
            path: "orderer.yaml"

      initContainers:
      - name: alpine
        image: alpine:3
        command: ['sh', '-c', 'sleep 30']

      containers:
      - name: orderer
        image: hyperledger/fabric-orderer:2.3.0
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric
        args: ["orderer"]
        ports:
        - name: app
          containerPort: 7050
        - name: operations
          containerPort: 8443
        env:
        - name: TZ
          value: "America/Bogota"
        - name: ORDERER_GENERAL_BOOTSTRAPFILE
          value: /etc/hyperledger/fabric/genesis.block
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP

        volumeMounts:
        - name: hlf-artifacts
          mountPath: "/etc/hyperledger/fabric"
          subPath: "certs/ordererOrganizations/consortium/orderers/orderer0"
        - name: hlf-artifacts
          mountPath: "/etc/hyperledger/fabric/genesis.block"
          subPath: "genesis.block"
        - name: orderer-yaml
          mountPath: "/etc/hyperledger/fabric/orderer.yaml"
          subPath: "orderer.yaml"